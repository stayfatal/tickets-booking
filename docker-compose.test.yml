networks:
  dev:

services:
  redis:
    image: redis:7.4-alpine3.20
    ports:
      - 6379:6379
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:16-alpine3.20
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_DB=auth_service_db
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: migrate/migrate
    entrypoint: ["migrate", "-path", "/migrations", "-database", "postgres://postgres:mypass@postgres:5432/auth_service_db?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev

  auth:
    build:
      context: .
      target: auth
    ports:
      - 8080:8080
    networks:
      - dev
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
        

  gateway:
    build: 
      context: .
      target: gateway
    ports:
      - 3000:3000
    networks:
      - dev
    depends_on:
      - auth

  test:
    build:
      context: .
      target: test
    networks:
      - dev
    depends_on:
      - auth
      - gateway