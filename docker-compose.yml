networks:
  dev:

services:
  redis:
    image: redis:7.4-alpine3.20
    env_file:
      - .env
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:16-alpine3.20
    env_file:
      - .env
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: migrate/migrate
    entrypoint: ["migrate", "-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SSL_MODE}", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev

  auth:
    build:
      context: .
      target: auth
    env_file:
      - .env
    networks:
      - dev
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
        

  gateway:
    build: 
      context: .
      target: gateway
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    env_file:
      - .env
    networks:
      - dev
    depends_on:
      - auth
